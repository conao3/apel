;;; -*-Emacs-Lisp-*-

;; APEL-CFG: installation setting about APEL.

;;; Code:

(defvar default-load-path load-path)
(setq load-path (cons (expand-file-name ".") load-path))

(require 'poe);; Pickup `eval-when-compile'.
(require 'install)


;;;
;;; @@ Please specify CUSTOM path.
;;;

(add-latest-path "custom")


;;; @ Please specify prefix of install directory.
;;;

;; Please specify install path prefix.
;; If it is omitted, shared directory (maybe /usr/local is used).
(defvar PREFIX install-prefix)
;;(setq PREFIX "~/")

;; Please specify emu prefix [optional]
(setq EMU_PREFIX
      (if (or (featurep 'xemacs)
	      (and (fboundp 'set-buffer-multibyte)
		   (subrp (symbol-function 'set-buffer-multibyte))))
	  "emu"
	""))

;; Please specify prefix for ``apel'' [optional]
(setq APEL_PREFIX "apel")



;;; @ optional settings
;;;

(defvar VERSION_SPECIFIC_LISPDIR
  (install-detect-elisp-directory PREFIX nil 'version-specific))

(setq EMU_DIR (expand-file-name EMU_PREFIX VERSION_SPECIFIC_LISPDIR))

;; It is generated by automatically. Please set variable `PREFIX'.
;; If you don't like default directory tree, please set it.
(defvar LISPDIR (install-detect-elisp-directory PREFIX))
;; (setq install-default-elisp-directory "~/lib/emacs/lisp")

(setq APEL_DIR (expand-file-name APEL_PREFIX LISPDIR))
;; (setq APEL_DIR (expand-file-name APEL_PREFIX VERSION_SPECIFIC_LISPDIR))

(defvar PACKAGEDIR
  (if (boundp 'early-packages)
      (let ((dirs (append (if early-package-load-path
			      early-packages)
			  (if late-package-load-path
			      late-packages)
			  (if last-package-load-path
			      last-packages)))
	    dir)
	(while (not (file-exists-p
		     (setq dir (car dirs))))
	  (setq dirs (cdr dirs)))
	dir)))

;;; APEL-CFG ends here
